# conditions simultanously
# P(Xn >or= x | n, R = 0.9) <or= 0.2    and   P(Xn >or= x | n, R = 0.95) >or= 0.8.
# where Xn is the number of successes in n trials.
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
Condition <- function (n, x) {
R1 <- 0.2
R2 <- 0.95
P1 <- 0
P2 <- 0
for (xn in x: n) {
P1 <- P1 + choose(n,xn) * R1^xn * (1-R1)^(n-xn)
P2 <- P2 + choose(n,xn) * R2^xn * (1-R2)^(n-xn)
}
Condition <- (P1<=0.2)&(P2>=0.8)
if (Condition) {print(P1)
print(P2)}
return(Condition)
}
# This code is to find the minimum n that satisfies the following two
# conditions simultanously
# P(Xn >or= x | n, R = 0.9) <or= 0.2    and   P(Xn >or= x | n, R = 0.95) >or= 0.8.
# where Xn is the number of successes in n trials.
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
Condition <- function (n, x) {
R1 <- 0.8
R2 <- 0.95
P1 <- 0
P2 <- 0
for (xn in x: n) {
P1 <- P1 + choose(n,xn) * R1^xn * (1-R1)^(n-xn)
P2 <- P2 + choose(n,xn) * R2^xn * (1-R2)^(n-xn)
}
Condition <- (P1<=0.2)&(P2>=0.8)
if (Condition) {print(P1)
print(P2)}
return(Condition)
}
# This code is to find the minimum n that satisfies the following two
# conditions simultanously
# P(Xn >or= x | n, R = 0.9) <or= 0.2    and   P(Xn >or= x | n, R = 0.95) >or= 0.8.
# where Xn is the number of successes in n trials.
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
Condition <- function (n, x) {
R1 <- 0.8
R2 <- 0.95
P1 <- 0
P2 <- 0
for (xn in x: n) {
P1 <- P1 + choose(n,xn) * R1^xn * (1-R1)^(n-xn)
P2 <- P2 + choose(n,xn) * R2^xn * (1-R2)^(n-xn)
}
Condition <- (P1<=0.2)&(P2>=0.8)
if (Condition) {print(P1)
print(P2)}
return(Condition)
}
# This code is to find the minimum n that satisfies the following two
# conditions simultanously
# P(Xn >or= x | n, R = 0.9) <or= 0.2    and   P(Xn >or= x | n, R = 0.95) >or= 0.8.
# where Xn is the number of successes in n trials.
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
Condition <- function (n, x) {
R1 <- 0.9
R2 <- 0.95
P1 <- 0
P2 <- 0
for (xn in x: n) {
P1 <- P1 + choose(n,xn) * R1^xn * (1-R1)^(n-xn)
P2 <- P2 + choose(n,xn) * R2^xn * (1-R2)^(n-xn)
}
Condition <- (P1<=0.2)&(P2>=0.8)
if (Condition) {print(P1)
print(P2)}
return(Condition)
}
# This code is to find the minimum n that satisfies the following two
# conditions simultanously
# P(Xn >or= x | n, R = 0.9) <or= 0.2    and   P(Xn >or= x | n, R = 0.95) >or= 0.8.
# where Xn is the number of successes in n trials.
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
Condition <- function (n, x) {
R1 <- 0.9
R2 <- 0.95
P1 <- 0
P2 <- 0
for (xn in x: n) {
P1 <- P1 + choose(n,xn) * R1^xn * (1-R1)^(n-xn)
P2 <- P2 + choose(n,xn) * R2^xn * (1-R2)^(n-xn)
}
Condition <- (P1<=0.2)&(P2>=0.8)
if (Condition) {print(P1)
print(P2)}
return(Condition)
}
# This code is to find the minimum n that satisfies the following two
# conditions simultanously
# P(Xn >or= x | n, R = 0.9) <or= 0.2    and   P(Xn >or= x | n, R = 0.95) >or= 0.8.
# where Xn is the number of successes in n trials.
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
Condition <- function (n, x) {
R1 <- 0.9
R2 <- 0.95
P1 <- 0
P2 <- 0
for (xn in x: n) {
P1 <- P1 + choose(n,xn) * R1^xn * (1-R1)^(n-xn)
P2 <- P2 + choose(n,xn) * R2^xn * (1-R2)^(n-xn)
}
Condition <- (P1<=0.2)&(P2>=0.8)
if (Condition) {print(P1)
print(P2)}
return(Condition)
}
n <- 0
FIND = FALSE
while (!FIND){
n <- n + 1
print(n)
for (x in 0 : n) {
if ( Condition(n,x) ) {
n_min <- n
corresponding_x <- x
FIND = TRUE
break
}
}
}
choose(10,2)
choose(3,2)
choose(2,2)
q()
head(Data)
```
rm(list=ls())
setwd("C:/Dropbox/Coursera/5ReproducibleResearch/RepData_PeerAssessment1")
Data<-read.csv("activity.csv")
head(Data)
View(Data)
library(ggplot2)
View(Data)
qplot(interval,steps,Data)
qplot(interval,steps,data=Data)
complete.cases(Data)
```{r}
library(dplyr)
setwd("C:/Dropbox/Coursera/5ReproducibleResearch/RepData_PeerAssessment1")
Data<-read.csv("activity.csv")
Data<-complete.cases(Data)
setwd("C:/Dropbox/Coursera/5ReproducibleResearch/RepData_PeerAssessment1")
Data<-read.csv("activity.csv")
Data<-Data[complete.cases(Data),]
head(Data)
library(dplyr)
library(ggplot2)
Data_group_by_date <- group_by(Data,date)
Data_mean_by_date<-summarize(Data_group_by_date, mean(steps))
View(Data_mean_by_date)
colnames(Data_mean_by_date)<-c("date","mean_step")
View(Data_mean_by_date)
colnames(Data_mean_by_date)<-c("date","total_step_number")
qplot(date,mean_step,data=Data_mean_by_date)+geom_histogram()
qplot(date,total_step_number,data=Data_mean_by_date)+geom_histogram()
qplot(date,total_step_number,data=Data_mean_by_date,geom="histogram")
_
The mean and median of the total number of steps taken per day
mean(Data_mean_by_date$mean_step)
str(Data_mean_by_date)
mean(Data_mean_by_date$mean_step)
Data_mean_by_date$mean_step
Data_mean_by_date
mean(Data_mean_by_date$total_step_number)
mean(Data_mean_by_date$total_step_number)
1.076618910^{4}
mean(Data_mean_by_date$total_step_number)
rm(list=ls())
library(dplyr)
library(ggplot2)
setwd("C:/Dropbox/Coursera/5ReproducibleResearch/RepData_PeerAssessment1")
Data<-read.csv("activity.csv")
Data<-Data[complete.cases(Data),]
head(Data)
Data_group_by_date <- group_by(Data,date)
Data_mean_by_date<-summarize(Data_group_by_date, sum(steps))
colnames(Data_mean_by_date)<-c("date","total_step_number_per_day")
qplot(total_step_number_per_day,data=Data_mean_by_date,geom="histogram")
mean(Data_mean_by_date$total_step_number)
View(Data_mean_by_date)
View(Data_group_by_date)
View(Data_group_by_date)
View(Data)
The median of the total number of steps taken per day is `r median(Data_mean_by_date$total_step_number)`
median(Data_mean_by_date$total_step_number)
mean(Data_mean_by_date$total_step_number)
The mean of the total number of steps taken per day is `r round(mean(Data_mean_by_date$total_step_number))`
Data_group_by_interval<-group_by(Data,interval)
View(Data_group_by_interval)
data_mean_by_interval<-summarize(Data_group_by_interval,mean(steps))
View(data_mean_by_interval)
qplot(aes(x=mean_step_number_by_interval,y=data=Data_mean_by_interval)+geom_line()
qplot(aes(x=mean_step_number_by_interval,y=data=Data_mean_by_interval))+geom_line()
qplot(aes(x=interval,y=mean_step_number_by_interval,data=Data_mean_by_interval))+geom_line()
qplot(Data_mean_by_interval,aes(x=interval,y=mean_step_number_by_interval))+geom_line()
Data_mean_by_interval<-summarize(Data_group_by_interval,mean(steps))
colnames(Data_mean_by_date)<-c("interval","mean_step_number_by_interval")
qplot(Data_mean_by_interval,aes(x=interval,y=mean_step_number_by_interval))+geom_line()
View(Data_mean_by_interval)
colnames(Data_mean_by_date)<-c("interval","mean_step_number_by_interval")
View(Data_mean_by_interval)
colnames(Data_mean_by_interval)<-c("interval","mean_step_number_by_interval")
qplot(Data_mean_by_interval,aes(x=interval,y=mean_step_number_by_interval))+geom_line()
Data_group_by_interval<-group_by(Data,interval)
Data_mean_by_interval<-summarize(Data_group_by_interval,mean(steps))
colnames(Data_mean_by_interval)<-c("interval","mean_step_number_by_interval")
qplot(Data_mean_by_interval,aes(x=interval,y=mean_step_number_by_interval))+geom_line()
qplot(Data_mean_by_interval, aes( x=interval, y=mean_step_number_by_interval) )
View(Data_mean_by_interval)
plot(Data_mean_by_interval$interval,Data_mean_by_interval$mean_step_number_by_interval)
gglot(Data_mean_by_interval, aes( x=interval, y=mean_step_number_by_interval) )+geom_line()
ggplot(Data_mean_by_interval, aes( x=interval, y=mean_step_number_by_interval) )+geom_line()
ggplot(Data_mean_by_interval, aes( x=interval, y=mean_step_number_by_interval) )+geom_line()
```
ggplot(Data_mean_by_interval, aes( x=interval, y=mean_step_number_by_interval) )+geom_line()
source('~/.active-rstudio-document', echo=TRUE)
rm(list=ls())
library(dplyr)
source('~/.active-rstudio-document', echo=TRUE)
View(Data)
View(Data_mean_by_date)
View(Data_group_by_date)
source('~/.active-rstudio-document', echo=TRUE)
View(Data_sum_by_date)
The mean of the total number of steps taken per day is `r mean(Data_mean_by_date$total_step_number)`
source('~/.active-rstudio-document', echo=TRUE)
NA_Index <- is.na(Data_group_by_day$steps)
View(Data)
library(dplyr)
library(ggplot2)
Data_group_by_day<-group_by(Data,date)
NA_Index <- is.na(Data_group_by_day$steps)
summarize(Data_group_by_day,mean(steps))
summarize(Data_group_by_day,mean(steps,na.rm = TRUE))
source('~/.active-rstudio-document', echo=TRUE)
View(Data_mean_by_day)
source('~/.active-rstudio-document', echo=TRUE)
View(Data_mean_by_date)
merge(Date,Data_mean_by_date,by="date")
merge(Data,Data_mean_by_date,by="date")
Data<-merge(Data,Data_mean_by_date,by=date)
Data<-merge(Data,Data_mean_by_date,by="date)
Data<-merge(Data,Data_mean_by_date,by="date")
NA_Index <- is.na(Data$steps)
Data<-merge(Data,Data_mean_by_date,by="date")
View(Data)
View(Data)
Data<-read.csv("activity.csv")
View(Data)
str(Data)
Data[Data$date == "2012-10-01"]
Data[Data$date == "2012-10-01",]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Data[NA_Index,steps]
Data$steps[NA_Index]
Data$steps
View(Data)
source('~/.active-rstudio-document', echo=TRUE)
View(Data)
View(Data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(Data)
source('~/.active-rstudio-document', echo=TRUE)
View(Data)
Data$date[NA_Index]
Data_complete<-Data[complete.cases(Data),]
summary(Data_complete$date)
Data_complete$date
source('~/.active-rstudio-document', echo=TRUE)
View(Data)
View(Data)
ggplot(Data_sum_by_date,aes(date,total_step_number_by_date)) + geo_line
ggplot(Data_sum_by_date,aes(date,total_step_number_by_date)) + geom_line()
colnames(Data_sum_by_date)<-c("date","total_step_number_by_date")
ggplot(Data_sum_by_date,aes(date,total_step_number_by_date)) + geom_line()
View(Data_sum_by_date)
ggplot(Data_sum_by_date,aes(date,total_step_number_by_date)) + geom_line()
summary(Data_sum_by_date)
ggplot(Data_sum_by_date,aes(total_step_number_by_date)) + geom_line()
ggplot(Data_sum_by_date,aes(total_step_number_by_date)) + geom_line()
ggplot(Data_sum_by_date,aes(x=date,y=total_step_number_by_date)) + geom_line()
plot(date,total_step_number_by_date)
plot(Data_sum_by_date$date,Data_sum_by_date$total_step_number_by_date)
plot(Data_sum_by_date$date,Data_sum_by_date$total_step_number_by_date)
xlab('Date')
plot(Data_sum_by_date$date,Data_sum_by_date$total_step_number_by_date,
xlab <- 'date')
plot(Data_sum_by_date$date,Data_sum_by_date$total_step_number_by_date,
xlab <- expression('date') )
plot(Data_sum_by_date$date,Data_sum_by_date$total_step_number_by_date,
xlab <- expression('date') )
qplot(date, total_step_number_by_date, data=Data_sum_by_date)
+ scale_x_continuous(breaks=c('2012-10-01','2012-10-18','2012-11-04','2012-11-21'))
qplot(date, total_step_number_by_date, data=Data_sum_by_date)
+ scale_x_continuous(breaks=1:10)
qplot(date, total_step_number_by_date, data=Data_sum_by_date)
qplot(date, total_step_number_by_date, data=Data_sum_by_date)+geom_line()
qplot(date, total_step_number_by_date, data=Data_sum_by_date)+geom_line()
xlab <- expression('date') )
library(ggplot2)
plot(Data_sum_by_date$date,Data_sum_by_date$total_step_number_by_date,
xlab <- expression('date') )
title(xlab = 'date', ylab = 'total number of steps by date',
line = NA, outer = FALSE, ...)
plot(Data_sum_by_date$date, Data_sum_by_date$total_step_number_by_date )
title(xlab = 'date', ylab = 'total number of steps by date')
median(Data_sum_by_date$total_step_number,na.rm=TRUE)
max(Data_mean_by_interval$mean_step_number_by_interval)
Data_mean_by_interval$interval(Data_mean_by_interval$mean_step_number_by_interval=max(Data_mean_by_interval$mean_step_number_by_interval))
Data_mean_by_interval$interval(Data_mean_by_interval$mean_step_number_by_interval==max(Data_mean_by_interval$mean_step_number_by_interval))
Data_mean_by_interval$interval[(]Data_mean_by_interval$mean_step_number_by_interval==max(Data_mean_by_interval$mean_step_number_by_interval)]
Data_mean_by_interval$interval[(Data_mean_by_interval$mean_step_number_by_interval==max(Data_mean_by_interval$mean_step_number_by_interval)]
Data_mean_by_interval$interval
Data_mean_by_interval$interval[Data_mean_by_interval$mean_step_number_by_interval==max(Data_mean_by_interval$mean_step_number_by_interval)]
sum(is.na(Data$steps))
is.na(Data$steps)
sum(is.na(Data$steps))
2304/288
sum(is.na(Data$date))
View(Data)
sum(is.na(Data$interval))
View(Data)
source('~/.active-rstudio-document', echo=TRUE)
View(Data)
Data_New<-Data[,date,interval,steps]
Data_New<-Data[,c('date','interval','steps')]
View(Data_New)
View(Data_mean_by_interval)
weekdays('2012-10-01')
weekdays(as.Date('2012-10-01'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-06'))
weekdays(as.Date('2012-10-06')) == "Saturday"
Data<-read.csv("activity.csv")
Data<-mutate(Weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
Data<-mutate(Data, Weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
View(Data)
Data$Weekend[date == "2012-10-06"]
Data$Weekend[228*5+1]
Data$Weekend[228*6+1]
Data$Weekend[288*5+1]
Data$Weekend[288*5]
Data$Weekend[288*5+2]
Data$Weekend[288*6+1]
Data$Weekend[288*7+1]
Data$Weekend[288*7]
Data<-read.csv("activity.csv")
Data<-mutate(Data, Weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
Data<-group_by(Data,interval,weekend)
View(Data)
View(Data)
Data<-read.csv("activity.csv")
Data<-mutate(Data, weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
Data<-group_by(Data,interval,weekend)
summarize(Data,mean(steps,rm.na=TRUE))
View(Data)
Data<-read.csv("activity.csv")
Data<-mutate(Data, weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
View(Data)
Data<-read.csv("activity.csv")
Data<-read.csv("activity.csv")
View(Data)
Data<-read.csv("activity.csv")
Data<-mutate(Data, weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
Data<-group_by(Data,interval,weekend)
View(Data)
source('~/.active-rstudio-document', echo=TRUE)
Data_mean_by_interval<-summarize(Data,mean(steps,rm.na=TRUE))
View(Data_mean_by_interval)
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()
Data_mean_by_interval2<-summarize(Data,mean(steps,rm.na=TRUE))
colnames(Data_mean_by_interval2)<-c("interval","mean_step_number_by_interval")
library(ggplot2)
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()
View(Data_mean_by_interval2)
colnames(Data_mean_by_interval2)<-c("interval","weekend","mean_step_number_by_interval")
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()+ facet_grid( weekend ~.)
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()+ facet_grid( weekend ~.,labeller=c("weekday,"weekend"))
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()+ facet_grid( weekend ~.,labeller=c("weekday,"weekend"))
ggplot(Data_mean_by_interval2,aes(x=interval,y=mean_step_number_by_interval,group=weekend))+geom_line()+ facet_grid( weekend ~.,labeller=c("weekday","weekend"))
Data$weekend[Data$weekend] <- "weekend"
View(Data)
Data$weekend[288*5+1]
!"weekend"
t_f <-Data$weekend
Data<-mutate(Data, weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
t_f <-Data$weekend
Data$weekend[t_f]<-"weekend"
Data$weekend[!t_f]<-"weekday"
Data$weekend[t_f]="weekend"
?factor
as.factor(Data$weekend)
?as.factor
Data<-mutate(Data, weekend = as.factor(weekend,labels = c("weekday","weekend")))
Data<-read.csv("activity.csv")
Data<-Data[complete.cases(Data),]
Data<-mutate(Data, weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
Data<-mutate(Data, weekend = as.factor(weekend,labels = c("weekday","weekend")))
View(Data)
str(Data)
Data<-mutate(Data, weekend = as.factor(weekend,labels = c("weekday","weekend")))
as.factor(Data$weekend,labels = c("weekday","weekend"))
as.factor(Data$weekend,levels = c("weekday","weekend"))
factor(Data$weekend,levels = c("weekday","weekend"))
Data<-read.csv("activity.csv")
Data<-Data[complete.cases(Data),]
Data<-mutate(Data, weekend = (weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday") )
Data<-mutate(Data, weekend = as.factor(weekend,labels = c("weekday","weekend")))
Data<-mutate(Data, weekend = factor(weekend,labels = c("weekday","weekend")))
View(Data)
Data$weekend[288*5+1]
Data$weekend[288*5]
Data$weekend[288*5-1]
Data$weekend[1]
Data$weekend[288*4]
Data$weekend[288*5]
Data[288*5,]
Data[288*5,]
Data[288*4,]
Data[288*4+1,]
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
#### Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
